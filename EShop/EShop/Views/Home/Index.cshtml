@using EShop.Data
@using EShop.Models.EFModels.Product
@using EShop.Models.ViewModels
@model IEnumerable<Product>
@inject ApplicationDbContext context

@{
    ViewData["Title"] = "Products";
}


@section sidenav
    {
    @Html.Partial("_SideNav")
}

<div class="main-carousel">
    <br />
    @{
        ICollection<ProductAd> productAds = ViewBag.ProductAds;
    }
    @Html.Partial("_MainCarousel", productAds)
</div>

@if (ViewBag.IsSearch) //If this page is shown on product search search
{
    <h4>
        <strong>Search results for:</strong> @ViewBag.SearchText
    </h4>
}
else if (ViewBag.CurrentCategoryName == null)
{
    <h4>All</h4>
}
else
{
    <h4>@ViewBag.CurrentCategoryName</h4>
}

@if (TempData["ErrorMsg"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMsg"]
    </div>
}
else if (TempData["SuccessMsg"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMsg"]
    </div>
}

@if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
{
    <a asp-controller="Product" asp-action="Create">Create New</a>
}

<div class="m-faqs">
    @foreach (var item in Model.Select((value, index) => new { Value = value, Index = index, ImageLink = ViewBag.AllPrimaryImageLinks[index], HasDiscountList = ViewBag.HasDiscountList[index], DiscountPriceList = ViewBag.DiscountPriceList[index], DiscountEndDateList = ViewBag.DiscountEndDateList[index] }))
    {
        <text>
            <div class="m-faqs_item">
                <a asp-action="ProductPage" asp-route-id="@item.Value.Id">
                    <p>
                        <img src="~/images/products/@item.ImageLink" height="170" width="120">
                    </p>
                    <p>
                        <h5>
                            <span>
                                <strong>@Html.DisplayFor(modelItem => item.Value.Name)</strong>
                            </span>
                        </h5>
                    </p>
                </a>
                <p>@Html.DisplayFor(modelItem => item.Value.Description)</p>
                <p>
                    @if (item.HasDiscountList == true)
                    {
                        <ul>
                            <li>
                                <img src="~/images/discount.png" height="30" width="30" />
                                <strike>€@Html.DisplayFor(modelItem => item.Value.Price)</strike>
                                <font color="red">€@item.DiscountPriceList</font>
                            </li>
                            <li>
                                Ends in:
                            </li>
                            <li>
                                <font color="red" id="discount-timer-@item.Index"></font>
                            </li>
                            @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
                            {
                                <li>
                                    <a asp-controller="Product" asp-action="RemoveDiscount" asp-route-page="Index" asp-route-productId="@item.Value.Id">Remove discount</a>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <text>€</text>
        @Html.DisplayFor(modelItem => item.Value.Price)
    }
                </p>
                <div class="m-faqs_add_btn_container">
                    @if (!User.IsInRole("Admin") && !User.IsInRole("SuperAdmin"))
                    {
                        <div>
                            <form id="add-btn-form-@item.Index">
                                Quantity &nbsp<input id="quantity-id-@item.Index" type="number" size="2" min="1" value="1" required="required" />
                                <input id="hidden-id-@item.Index" type="hidden" size="2" value="@item.Value.Id" required="required" />
                                <hr>
                                <!--
                                <hr>
                                Quantity &nbsp<input id="quantity-id-@item.Index" type="number" size="2" min="1" value="1" required="required" />
                                <input id="hidden-id-@item.Index" type="hidden" size="2" value="@item.Value.Id" required="required" />
                                -->
                                <button id="add-btn-@item.Index" type="submit" class="btn btn-add">
                                    <img src="~/images/shopping-cart.png" width="20" height="20" />
                                    <text>
                                        Add to cart
                                    </text>
                                </button>
                            </form>
                        </div>
                    }

                    @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
                    {
                        <ul>
                            <li>
                                <a asp-controller="Product" asp-action="Edit" asp-route-id="@item.Value.Id">Edit</a>
                            </li>
                            <li>
                                <a asp-controller="Product" asp-action="Delete" asp-route-id="@item.Value.Id">Delete</a>
                            </li>

                            @{
                                var productDiscount = (from pd in context.ProductDiscount
                                                       where pd.ProductId == item.Value.Id
                                                       select pd).FirstOrDefault();
                            }
                            @if (productDiscount == null)
                            {
                                <li>
                                    <a asp-controller="Product" asp-action="Discount" asp-route-page="Index" asp-route-productId="@item.Value.Id">Make discount</a>
                                </li>
                            }
                            else
                            {
                                <text>Make discount</text>
                            }
                        </ul>
                    }
                </div>
            </div>
            </text>
        }
</div>
<!--
<table class="table">
    <tbody>
    @foreach (var item in Model.Select((value, index) => new {Value = value, Index = index, ImageLink = ViewBag.AllPrimaryImageLinks[index], HasDiscountList = ViewBag.HasDiscountList[index], DiscountPriceList = ViewBag.DiscountPriceList[index], DiscountEndDateList = ViewBag.DiscountEndDateList[index]}))
    {
        <tr>
            <td>
                <a asp-action="ProductPage" asp-route-id="@item.Value.Id">
                    <img src="~/images/products/@item.ImageLink" height="170" width="120">
                </a>
            </td>
            <td></td>
            <td>
                <a asp-action="ProductPage" asp-route-id="@item.Value.Id">
                    <strong>@Html.DisplayFor(modelItem => item.Value.Name)</strong>
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Value.Description) <br />
            </td>
            <td>
                @if (item.HasDiscountList == true)
                {
                    <ul>
                        <li>
                            <img src="~/images/discount.png" height="30" width="30" />
                            <strike>€@Html.DisplayFor(modelItem => item.Value.Price)</strike>
                            <font color="red">€@item.DiscountPriceList</font>
                        </li>
                        <li>
                            Ends in:
                        </li>
                        <li>
                            <font color="red" id="discount-timer-@item.Index"></font>
                        </li>
                        @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
                        {
                            <li>
                                <a asp-controller="Product" asp-action="RemoveDiscount" asp-route-page="Index" asp-route-productId="@item.Value.Id">Remove discount</a>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <text>€</text>
                    @Html.DisplayFor(modelItem => item.Value.Price)
                }
            </td>
            <td>
                @if (!User.IsInRole("Admin") && !User.IsInRole("SuperAdmin"))
                {
                    <div>
                        <form id="add-btn-form-@item.Index">
                            Quantity &nbsp<input id="quantity-id-@item.Index" type="number" size="2" min="1" value="1" required="required" />
                            <input id="hidden-id-@item.Index" type="hidden" size="2" value="@item.Value.Id" required="required" />
                            <button id="add-btn-@item.Index" type="submit" class="btn btn-info">
                                <span class="glyphicon glyphicon-shopping-cart" aria-hidden="true"></span> Add
                            </button>
                        </form>
                    </div>
                }
            </td>
            @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
            {
                <td>
                    <ul>
                        <li><a asp-controller="Product" asp-action="Edit" asp-route-id="@item.Value.Id">Edit</a></li>
                        <li><a asp-controller="Product" asp-action="Delete" asp-route-id="@item.Value.Id">Delete</a></li>

                        @{
                            var productDiscount = (from pd in context.ProductDiscount
                                where pd.ProductId == item.Value.Id
                                select pd).FirstOrDefault();
                        }
                        @if (productDiscount == null)
                        {
                            <li><a asp-controller="Product" asp-action="Discount" asp-route-page="Index" asp-route-productId="@item.Value.Id">Make discount</a></li>
                        }
                    </ul>
                </td>
            }
        </tr>
    }
    </tbody>
</table>
-->
<!-- Pagination -->
@Html.Partial("_Pagination")

<!-- Private modals-->
@Html.Partial("Modals/_AddChildCategoryModal", (CategoryListViewModel)ViewBag.AllCategories)
@Html.Partial("Modals/_RemoveCategoryModal")
@Html.Partial("Modals/_EditCategoryModal")
@Html.Partial("Modals/_ShoppingCartSessionModal")

<!-- Shared modals -->
@Html.Partial("Modals/_ShoppingCartAddModal")
@Html.Partial("Modals/_LoadingModal")

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">
    var x = setInterval(function() {
            @foreach (var item in Model.Select((value, index) => new {Value = value, Index = index, DiscountEndDateList = ViewBag.DiscountEndDateList[index]}))
            {
                if (item.DiscountEndDateList != null)
                {
                    string endDate = item.DiscountEndDateList.ToString("yyyy-MM-ddTHH:mm:ss");

                    <text>
                        // Set the date we're counting down to
                        var countDownDate = new Date('@endDate').getTime();
                        // Get todays date and time
                        var now = new Date().getTime();

                        // Find the distance between now an the count down date
                        var distance = countDownDate - now;

                        // Time calculations for days, hours, minutes and seconds
                        var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                        var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                        // Output the result in an element with id="demo"
                        $("#discount-timer-@item.Index")
                            .html(days + "d " + hours + "h " + minutes + "m " + seconds + "s ");

                        // If the count down is over, write some text
                        if (distance < 0) {
                            @{
                                <text>
                                    $("#discount-timer-@item.Index").html("EXPIRED");
                                </text>
                            }
                        }
                    </text>
                }
            }
        },
        1000);
</script>